{"version":3,"sources":["components/Projects/ProjectForm/ProjectForm.module.css","components/Notes/ToDoForm/ToDoForm.module.css","components/Users/Users.module.css","components/Notes/Notes.module.css","components/Menu/Menu.module.css","components/Footer/Footer.module.css","components/Projects/ProjectView/ProjectView.module.css","components/Users/UserItem/UserItem.jsx","components/Users/Users.jsx","components/Notes/NoteItem/NoteItem.jsx","components/Notes/Notes.jsx","components/Projects/ProjectItem/ProjectItem.jsx","components/Projects/SearchProjectForm/SearchProjectForm.jsx","components/Projects/Projects.jsx","components/Menu/MenuItem/MenuItem.jsx","components/Menu/Menu.jsx","components/Footer/Footer.jsx","components/NotFound404/NotFound404.jsx","components/Projects/ProjectView/ProjectView.jsx","components/Authorization/Auth.jsx","components/Projects/ProjectForm/ProjectForm.jsx","components/Notes/ToDoForm/ToDoForm.jsx","components/Projects/ChangeProjectForm/ChangeProjectForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","UserItem","user","username","firstname","lastname","email","Users","props","usersElements","users","map","uuid","className","c","isFirstUsersPage","onClick","changePage","isLastUsersPage","currentPage","NoteItem","note","deleteNote","project","name","slice","text","type","NotesList","NoteElements","notes","textCol","isFirstNotesPage","isLastNotesPage","to","ProjectItem","deleteProject","UserNames","item","join","href","repoLink","SearchProjectForm","state","foundProjects","projects","searchStr","event","this","setState","target","value","filter","includes","update","preventDefault","onSubmit","handleSubmit","htmlFor","id","onChange","handleChange","length","React","Component","ProjectsList","useState","setFoundProjects","updateProjectElements","changeProject","isFirstProjectPage","isLastProjectPage","MenuItem","toLowerCase","isAuthenticated","logout","Menu","ItemElements","items","menu","Footer","footer","NotFound404","location","pathname","ProjectView","useParams","currentProject","find","projectData","Auth","login","password","getToken","placeholder","ProjectForm","allUsers","Array","from","selectedOptions","option","createProject","formGroup","multiple","ToDoForm","allProjects","projectsElements","createNote","ChangeProjectForm","match","params","split","withRouter","App","url","menuItem","token","usersPage","projectPage","notesPage","headers","Cookies","set","loadData","axios","post","then","response","setToken","data","setUsername","catch","error","alert","get","entity","action","currentPageLabel","isLastPage","isLastPageLabel","isFirstPage","isFirstPageLabel","getHeaders","objects","results","next","previous","console","log","delete","object","newObject","patch","getCookieFromStorage","bind","exact","path","render","Projects","deleteObject","Notes","changeObject","createObject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4a7f5cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"ProjectForm_formGroup__1yfp2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"ToDoForm_formGroup__MjCLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2Iv27\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textCol\":\"Notes_textCol__28aIv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__1wQ3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectData\":\"ProjectView_projectData__1w3fb\"};","const UserItem = ({user}) => {\n    return(\n        <tr>\n            <td>\n                {user.username}\n            </td>\n            <td>\n                {user.firstname} {user.lastname}\n            </td>\n            <td>\n                {user.email}\n            </td>\n        </tr>\n    )\n}\n\nexport default UserItem;","import UserItem from \"./UserItem/UserItem\";\nimport c from './Users.module.css';\n\nconst Users = (props) => {\n    let usersElements = props.users.map(user => <UserItem user={user} key={user.uuid}/>)\n\n\n    return(\n        <div>\n            <table className={c.users}>\n                <thead>\n                    <tr>\n                        <th>\n                            Login\n                        </th>\n                        <th>\n                            Full name\n                        </th>\n                        <th>\n                            Email\n                        </th>\n                    </tr>\n                    {usersElements}\n                </thead>\n            </table>\n            {props.isFirstUsersPage ? null : <button onClick={() => props.changePage('users', 'previous')}>Previous page</button>}\n            {props.isLastUsersPage ? null : <button onClick={() => props.changePage('users', 'next')}>Next page</button>}\n            <div>Текущая страница: {props.currentPage}</div>\n        </div>\n    )\n}\n\nexport default Users;","const NoteItem = ({note, deleteNote}) => {\n    return (\n        <tr>\n            <td>{note.project.name.slice(0, 60)}</td>\n            <td>{note.text.slice(0, 100)}</td>\n            <td>{note.user.firstname} {note.user.lastname}</td>\n            <td><button onClick={() => deleteNote('notes', note.uuid)} type='button'>Delete</button></td>\n        </tr>\n    )\n}\n\nexport default NoteItem;","import NoteItem from \"./NoteItem/NoteItem\";\nimport c from './Notes.module.css';\nimport {Link} from \"react-router-dom\";\n\nconst NotesList = (props) => {\n    let NoteElements = props.notes.map(note => <NoteItem note={note} deleteNote={props.deleteNote} key={note.uuid}/>)\n\n    return (\n        <div>\n            <table>\n                <tbody>\n                    <tr>\n                        <th>Project name</th>\n                        <th className={c.textCol}>Text</th>\n                        <th>Author</th>\n                        <th/>\n                    </tr>\n                    {NoteElements}\n                </tbody>\n            </table>\n            {props.isFirstNotesPage ? null : <button onClick={() => props.changePage('notes', 'previous')}>Previous page</button>}\n            {props.isLastNotesPage ? null : <button onClick={() => props.changePage('notes', 'next')}>Next page</button>}\n            <div>Текущая страница: {props.currentPage}</div>\n            <Link to='/notes/create'>Create</Link>\n        </div>\n    )\n}\n\nexport default NotesList;","import {NavLink} from \"react-router-dom\";\n\nconst ProjectItem = ({project, deleteProject}) => {\n    let UserNames = project.users.map(item => `${item.firstname} ${item.lastname}`).join('---')\n    return (\n        <tr>\n            <td><NavLink to={`project/${project.uuid}`}>{project.name.slice(0, 60)}</NavLink></td>\n            <td><a href={project.repoLink}>{project.repoLink}</a></td>\n            <td>{UserNames}</td>\n            <td><button onClick={() => deleteProject('projects', project.uuid)} type='button'>Delete</button></td>\n            <td><NavLink to={`/project/change/${project.uuid}`}>Change</NavLink></td>\n        </tr>\n    )\n}\n\nexport default ProjectItem;","import React from 'react'\n\nclass SearchProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            foundProjects: this.props.projects,\n            searchStr: '',\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        let foundProjects;\n        if (this.state.searchStr) {\n            foundProjects = this.props.projects.filter(project => project.name.includes(this.state.searchStr));\n        } else {\n            foundProjects = this.props.projects;\n        }\n        this.setState({\n            foundProjects: foundProjects\n        })\n        this.props.update(foundProjects);\n\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <form onSubmit={event => this.handleSubmit(event)}>\n                <label htmlFor='searchField'>Search by name...</label>\n                <input id='searchField' name='searchStr' value={this.state.searchStr} onChange={event => this.handleChange(event)}/>\n                <button type='submit'>Search</button>\n                <span>Найдено {this.state.foundProjects.length} записей</span>\n            </form>\n        )\n    }\n}\n\nexport default SearchProjectForm;","import ProjectItem from \"./ProjectItem/ProjectItem\";\nimport {Link} from \"react-router-dom\";\nimport React, {useState} from 'react';\nimport SearchProjectForm from \"./SearchProjectForm/SearchProjectForm\";\n\n\nconst ProjectsList = (props) => {\n    const [foundProjects, setFoundProjects] = useState(props.projects)\n    // const [searchStr, setSearchStr] = useState('')\n\n    // let ProjectElements = props.projects.map(project => <ProjectItem deleteProject={props.deleteProject} project={project} key={project.uuid}/>)\n    //\n    const updateProjectElements = projects => {\n        setFoundProjects(projects);\n    }\n\n  //   const searchByName = str => {\n  //     let foundProjects;\n  //     if (str) {\n  //         foundProjects = props.projects.filter(project => project.name.includes(str));\n  //     } else {\n  //         foundProjects = props.projects;\n  //     }\n  //     setFoundProjects(foundProjects);\n  //     ProjectElements = foundProjects.map(project => <ProjectItem deleteProject={props.deleteProject} project={project} key={project.uuid}/>)\n  // }\n  //\n  //   const handleChange = event => {\n  //       setSearchStr(event.target.value)\n  //       searchByName(event.target.value)\n  //   }\n\n\n    return (\n        <div>\n            <SearchProjectForm projects={props.projects} update={updateProjectElements}/>\n            {/*<label htmlFor='search'>Search by name...</label>*/}\n            {/*<input id='search' name='searchStr' value={searchStr} type='text' onChange={event => handleChange(event)}/>*/}\n            {/*<div>Найдено {foundProjects.length} записей</div>*/}\n            <table>\n                <tbody>\n                    <tr>\n                        <th>Name</th>\n                        <th>Repository</th>\n                        <th>Participants</th>\n                        <th/>\n                    </tr>\n                    {foundProjects.map(project => <ProjectItem deleteProject={props.deleteProject}\n                                                               changeProject={props.changeProject}\n                                                               project={project} key={project.uuid}/>)}\n                </tbody>\n            </table>\n            {props.isFirstProjectPage ? null : <button onClick={() => {props.changePage('projects', 'previous'); updateProjectElements(props.projects)}}>Previous page</button>}\n            {/*<button onClick={() => previousPage()}>Previous page</button>*/}\n\n            {props.isLastProjectPage ? null : <button onClick={() => {props.changePage('projects', 'next'); updateProjectElements(props.projects)}}>Next page</button>}\n            {/*<button onClick={() => nextPage()}>Next page</button>*/}\n\n            <div>Текущая страница: {props.currentPage}</div>\n            <Link to='/projects/create'>Create</Link>\n        </div>\n    )\n}\n\n// class ProjectsList extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state ={\n//             foundProjects: props.projects,\n//             searchStr: '',\n//         }\n//         this.ProjectElements = props.projects.map(project => <ProjectItem deleteProject={props.deleteProject} project={project} key={project.uuid}/>)\n//     }\n//\n//     handleChange(event) {\n//         this.setState({\n//             searchStr: event.target.value\n//         })\n//         this.searchByName(event.target.value)\n//     }\n//\n//     searchByName(str) {\n//       let foundProjects;\n//       if (str) {\n//           foundProjects = this.props.projects.filter(project => project.name.includes(str));\n//       } else {\n//           foundProjects = this.props.projects;\n//       }\n//       this.setState({foundProjects: foundProjects});\n//       this.ProjectElements = foundProjects.map(project => <ProjectItem deleteProject={this.props.deleteProject} project={project} key={project.uuid}/>)\n//       debugger;\n//   }\n//\n//     render () {\n//         return (\n//             <div>\n//             <label htmlFor='search'>Search by name...</label>\n//             <input id='search' name='searchStr' value={this.state.searchStr} type='text' onChange={event => this.handleChange(event)}/>\n//             <div>Найдено {this.state.foundProjects.length} записей</div>\n//             <table>\n//                 <tbody>\n//                     <tr>\n//                         <th>Name</th>\n//                         <th>Repository</th>\n//                         <th>Participants</th>\n//                         <th/>\n//                     </tr>\n//                     {this.ProjectElements}\n//                 </tbody>\n//             </table>\n//             {this.props.isFirstProjectPage ? null : <button onClick={() => this.props.changePage('projects', 'previous')}>Previous page</button>}\n//             {/*<button onClick={() => previousPage()}>Previous page</button>*/}\n//\n//             {this.props.isLastProjectPage ? null : <button onClick={() => this.props.changePage('projects', 'next')}>Next page</button>}\n//             {/*<button onClick={() => nextPage()}>Next page</button>*/}\n//\n//             <div>Текущая страница: {this.props.currentPage}</div>\n//             <Link to='/projects/create'>Create</Link>\n//         </div>\n//         )\n//     }\n// }\n\nexport default ProjectsList;","import {NavLink} from \"react-router-dom\";\n\nconst MenuItem = (props) => {\n    return (\n        <li>\n            {props.item !== 'Login' ? <NavLink to={`/${props.item.toLowerCase()}`}>{props.item}</NavLink> :\n                (props.isAuthenticated() ? <button onClick={() => props.logout()}>Выйти</button> :\n                    <NavLink to={`/${props.item.toLowerCase()}`}>Войти</NavLink>)}\n        </li>\n    )\n}\n\nexport default MenuItem;","import c from './Menu.module.css';\nimport MenuItem from \"./MenuItem/MenuItem\";\n\nconst Menu = (props) => {\n    let ItemElements = props.items.map(item => <MenuItem item={item} isAuthenticated={props.isAuthenticated} logout={props.logout} key={item}/>)\n    return(\n        <nav className={c.menu}>\n            <ul>\n                {ItemElements}\n            </ul>\n             <ul>{(props.isAuthenticated() ? 'Hello' : '')} {props.username}</ul>\n        </nav>\n    )\n}\n\nexport default Menu;","import c from './Footer.module.css';\n\nconst Footer = props => {\n    return(\n        <div className={c.footer}>\n            Todo service. &copy; All rights reserved.\n        </div>\n    )\n}\n\nexport default Footer;","const NotFound404 = ({location}) => {\n    return (\n        <div>\n            <h1>Страница по адресу '{location.pathname}' не найдена!!!</h1>\n        </div>\n    )\n}\n\nexport default NotFound404;","import c from './ProjectView.module.css';\nimport {useParams} from 'react-router-dom';\n\nconst ProjectView = ({projects}) => {\n    let { id } = useParams();\n    let currentProject = projects.find(project => project.uuid == id);\n    let UserNames = currentProject.users.map(item => `${item.firstname} ${item.lastname}`).join('---')\n\n    return (\n        <div className={c.projectData}>\n            <div><span>Name:</span> {currentProject.name}</div>\n            <div><span>Link on repository:</span> {currentProject.repoLink}</div>\n            <div><span>Participants:</span> {UserNames}</div>\n        </div>\n    )\n}\n\nexport default ProjectView;","import React from 'react';\n\nclass Auth extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            login: '',\n            password: ''\n        }\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            },\n        )\n        // console.log(this.state.login, this.state.password);\n    }\n\n    handleSubmit(event) {\n        this.props.getToken(this.state.login, this.state.password);\n        // console.log(this.state.login, this.state.password);\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <form onSubmit={event => this.handleSubmit(event)}>\n                <input type='text' name='login' value={this.state.login} placeholder='login' onChange={event => this.handleChange(event)}/>\n                <input type='password' name='password' value={this.state.password} placeholder='password' onChange={event => this.handleChange(event)}/>\n                <button type='submit'>Login</button>\n            </form>\n        )\n    }\n}\n\nexport default Auth;","import React from 'react';\nimport c from './ProjectForm.module.css';\n\nclass ProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            repoLink: '',\n            users: [],\n        }\n        this.usersElements = this.props.allUsers.map(user => <option value={user.uuid} key={user.uuid}>{user.firstname} {user.lastname}</option>)\n    }\n\n    handleChange(event) {\n        if (['name', 'repoLink'].includes(event.target.name)) {\n            this.setState({[event.target.name]: event.target.value})\n        }\n        else {\n            let value = Array.from(event.target.selectedOptions, (option) => option.value);\n            this.setState({[event.target.name]: value})\n        }\n    }\n\n    handleSubmit(event) {\n        this.props.createProject({name: this.state.name, repoLink: this.state.repoLink, users: this.state.users}, 'projects')\n        event.preventDefault();\n    }\n\n    // componentDidMount() {\n    //     this.usersElements = this.props.allUsers.map(user => <option value={user.uuid} key={user.uuid}>{user.firstname} {user.lastname}</option>)\n    // }\n\n    render() {\n        return (\n            <form onSubmit={event => this.handleSubmit(event)}>\n                <div className={c.formGroup}>\n                    <label htmlFor='name'>Name</label>\n                    <input type='text' id='name' name='name' value={this.state.name} onChange={event => this.handleChange(event)}/>\n                </div>\n\n                <div className={c.formGroup}>\n                    <label htmlFor='repoLink'>Link of repository</label>\n                    <input type='text' id='repoLink' name='repoLink' value={this.state.repoLink} onChange={event => this.handleChange(event)}/>\n                </div>\n\n                <div className={c.formGroup}>\n                    <label htmlFor='users'>Users</label>\n                    {/*<input type='text' id='users' name='users' value={this.state.users} onChange={event => this.handleChange(event)}/>*/}\n                    <select multiple id='users' name='users' onChange={event => this.handleChange(event)}>\n                        {this.usersElements}\n                    </select>\n                </div>\n\n                <button type='submit'>Save</button>\n            </form>\n        )\n    }\n}\n\nexport default ProjectForm;","import React from 'react';\nimport c from './ToDoForm.module.css';\n\nclass ToDoForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            project: this.props.allProjects[0].name,\n            text: '',\n            user: this.props.allUsers[0].firstname,\n        }\n        this.projectsElements = this.props.allProjects.map(project => <option value={project.uuid} key={project.uuid}>{project.name}</option>)\n        this.usersElements = this.props.allUsers.map(user => <option value={user.uuid} key={user.uuid}>{user.firstname} {user.lastname}</option>)\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        this.props.createNote(\n            {\n                project: this.state.project,\n                text: this.state.text,\n                user: this.state.user,\n            }, 'notes')\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n                <form onSubmit={event => this.handleSubmit(event)}>\n                    <div className={c.formGroup}>\n                        <label htmlFor='project'>Project</label>\n                        {/*<input id='project' type='text' name='project' value={this.state.project} onChange={event => this.handleChange(event)}/>*/}\n                        <select id='project' name='project' onChange={event => this.handleChange(event)}>\n\n                            {this.projectsElements}\n\n                        </select>\n                    </div>\n\n                    <div className={c.formGroup}>\n                        <label htmlFor='noteText'>Text</label>\n                        <input id='noteText' type='text' name='text' value={this.state.text} onChange={event => this.handleChange(event)}/>\n                    </div>\n\n                    <div className={c.formGroup}>\n                        <label htmlFor='user'>User</label>\n                        {/*<input id='user' type='text' name='user' value={this.state.user} onChange={event => this.handleChange(event)}/>*/}\n                        <select id='user' name='user' onChange={event => this.handleChange(event)}>\n                            {this.usersElements}\n                        </select>\n                    </div>\n\n                    <button type='submit'>Save</button>\n                </form>\n        )\n    }\n}\n\nexport default ToDoForm;","import React from 'react';\nimport c from \"../ProjectForm/ProjectForm.module.css\";\nimport {withRouter} from \"react-router-dom\";\n\n\nclass ChangeProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.uuid = this.props.match.params.uuid;\n        this.project = props.projects.find(project => project.uuid === this.uuid);\n        this.state = {\n            name: this.project.name,\n            repoLink: this.project.repoLink,\n            users: this.project.users,\n        }\n        this.usersElements = this.props.users.map(user => <option value={user.uuid} key={user.uuid}>{user.firstname} {user.lastname}</option>)\n\n    }\n\n    handleChange(event) {\n        if (['name', 'repoLink'].includes(event.target.name)) {\n            this.setState({[event.target.name]: event.target.value})\n        }\n        else {\n            this.setState({[event.target.name]: event.target.value.split(',')})\n        }\n    }\n\n    handleSubmit(event) {\n        this.props.changeProject({name: this.state.name, repoLink: this.state.repoLink, users: this.state.users}, 'projects', this.uuid)\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <form onSubmit={event => this.handleSubmit(event)}>\n                <div className={c.formGroup}>\n                    <label htmlFor='name'>Name</label>\n                    <input type='text' id='name' name='name' value={this.state.name} onChange={event => this.handleChange(event)}/>\n                </div>\n\n                <div className={c.formGroup}>\n                    <label htmlFor='repoLink'>Link of repository</label>\n                    <input type='text' id='repoLink' name='repoLink' value={this.state.repoLink} onChange={event => this.handleChange(event)}/>\n                </div>\n\n                <div className={c.formGroup}>\n                    <label htmlFor='users'>Users</label>\n                    <select multiple id='users' name='users' onChange={event => this.handleChange(event)}>\n                        {this.usersElements}\n                    </select>\n                </div>\n\n                <button type='submit'>Save</button>\n            </form>\n        )\n    }\n}\n\nexport default withRouter(ChangeProjectForm);","import React from \"react\";\nimport c from './App.css';\nimport axios from \"axios\";\nimport Users from \"./components/Users/Users\";\nimport NotesList from \"./components/Notes/Notes\";\nimport ProjectsList from \"./components/Projects/Projects\";\nimport Menu from \"./components/Menu/Menu\";\nimport Footer from \"./components/Footer/Footer\";\nimport {BrowserRouter, HashRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport NotFound404 from \"./components/NotFound404/NotFound404\";\nimport ProjectView from \"./components/Projects/ProjectView/ProjectView\";\nimport Auth from \"./components/Authorization/Auth\";\nimport Cookies from \"universal-cookie/lib\";\nimport ProjectForm from \"./components/Projects/ProjectForm/ProjectForm\";\nimport ToDoForm from \"./components/Notes/ToDoForm/ToDoForm\";\nimport ChangeProjectForm from \"./components/Projects/ChangeProjectForm/ChangeProjectForm\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.url = 'http://127.0.0.1:8000';\n    this.state = {\n        users: [],\n        projects: [],\n        menuItem: ['Users', 'Projects', 'Notes', 'Login'],\n        notes: [],\n        token: '',\n        username: '',\n\n        usersPage: 1,\n        isLastUsersPage: false,\n        isFirstUsersPage: false,\n\n        projectPage: 1,\n        isLastProjectPage: false,\n        isFirstProjectPage: false,\n\n        notesPage: 1,\n        isLastNotesPage: false,\n        isFirstNotesPage: false,\n\n    }\n  }\n\n  setUsername(username) {\n      if (this.isAuthenticated()) {\n          this.setState({'username': username});\n      }\n  }\n\n  getHeaders() {\n      let headers = {\n          'Content-Type': 'application/json',\n          // 'Access-Control-Allow-Origin': 'http://localhost:3000'\n          // 'Access-Control-Allow-Origin': 'http://127.0.0.1:8000'\n      }\n      if (this.isAuthenticated()) {\n          headers['Authorization'] = `Token ${this.state.token}`;\n      }\n      return headers;\n  }\n\n  setToken(token) {\n      const cookies = new Cookies();\n      cookies.set('token', token);\n      this.setState({'token': token}, () => this.loadData());\n  }\n\n  getToken(login, password) {\n      axios.post(`${this.url}/api-token-auth/`, {username: login, password: password})\n      // axios.post(`127.0.0.1:8002/api/api-token-auth/`, {username: login, password: password})\n          .then(response => {\n              this.setToken(response.data['token']);\n              this.setUsername(login);\n          }).catch(error => alert('Wrong login or password!!!'))\n  }\n\n  getCookieFromStorage() {\n      const cookies = new Cookies();\n      const token = cookies.get('token');\n      this.setState({'token': token}, () => this.loadData());\n  }\n\n  changePage(entity, action) {\n      const headers = this.getHeaders();\n      let currentPage;\n      let currentPageLabel;\n\n      let isLastPage;\n      let isLastPageLabel;\n\n      let isFirstPage;\n      let isFirstPageLabel;\n\n      switch (entity) {\n          case 'projects':\n              currentPage = this.state.projectPage;\n              currentPageLabel = 'projectPage';\n\n              isLastPage = this.state.isLastProjectPage;\n              isLastPageLabel = 'isLastProjectPage';\n\n              isFirstPage = this.state.isFirstProjectPage;\n              isFirstPageLabel = 'isFirstProjectPage';\n              break;\n          case 'users':\n              currentPage = this.state.usersPage;\n              currentPageLabel = 'usersPage';\n\n              isLastPage = this.state.isLastUsersPage;\n              isLastPageLabel = 'isLastUsersPage';\n\n              isFirstPage = this.state.isFirstUsersPage;\n              isFirstPageLabel = 'isFirstUsersPage';\n              break;\n          case 'notes':\n              currentPage = this.state.notesPage;\n              currentPageLabel = 'notesPage';\n\n              isLastPage = this.state.isLastNotesPage;\n              isLastPageLabel = 'isLastNotesPage';\n\n              isFirstPage = this.state.isFirstNotesPage;\n              isFirstPageLabel = 'isFirstNotesPage';\n              break;\n          default:\n              break;\n      }\n\n      if (action === 'next' && !isLastPage) {\n          ++currentPage;\n      } else if (action === 'previous' && !isFirstPage) {\n          --currentPage;\n      } else {\n          return\n      }\n      axios.get(`${this.url}/api/${entity}/?page=${currentPage}`, {headers})\n        .then(response => {\n          const objects = response.data.results\n          this.setState(\n              {\n                [entity]: objects,\n                [currentPageLabel]: currentPage,\n                [isLastPageLabel]: !response.data.next,\n                [isFirstPageLabel]: !response.data.previous,\n              }\n          )\n        }).catch(error => console.log(error))\n  }\n\n  loadData() {\n      const headers = this.getHeaders();\n      axios.get(`${this.url}/api/0.2/users/?page=1`, {headers})\n        .then(response => {\n          const users = response.data.results\n          this.setState(\n              {\n                users: users,\n              }\n          )\n        }).catch(error => console.log(error))\n    axios.get(`${this.url}/api/projects/`, {headers})\n        .then(response => {\n          const projects = response.data.results\n          this.setState(\n              {\n                projects: projects,\n              }\n          )\n        }).catch(error => console.log(error))\n    axios.get(`${this.url}/api/notes/`, {headers})\n        .then(response => {\n          const notes = response.data.results\n          this.setState(\n              {\n                notes: notes,\n              }\n          )\n        }).catch(error => console.log(error))\n  }\n\n  logout() {\n      this.setToken('');\n      this.setState({'username': ''});\n  }\n\n  isAuthenticated() {\n      return this.state.token != '';\n  }\n\n  deleteObject(entity, uuid) {\n      const headers = this.getHeaders();\n      axios.delete(`${this.url}/api/${entity}/${uuid}/`, {headers: headers})\n          .then(response => {\n              const objects = this.state[entity].filter(object => object.uuid !== uuid);\n              this.setState({[entity]: objects})\n          }).catch(error => console.log(error))\n  }\n\n  createObject(data, entity) {\n      const headers = this.getHeaders();\n      axios.post(`${this.url}/api/${entity}/`, data, {headers: headers})\n          .then(response => {\n              let newObject = response.data;\n              switch (entity) {\n                  case 'projects':\n                      let users = this.state.users.filter(user => newObject.users.find(uuid => uuid === user.uuid));\n                      newObject.users = users;\n                      break;\n                  case 'notes':\n                      let project = this.state.projects.find(project => project.uuid === newObject.uuid);\n                      newObject.project = project;\n                      let user = this.state.users.find(user => user.uuid === newObject.uuid);\n                      newObject.user = user;\n                      break;\n                  default:\n                      break;\n              }\n          }).catch(error => console.log(error));\n  }\n\n  changeObject(data, entity, uuid) {\n      const headers = this.getHeaders();\n      axios.patch(`${this.url}/api/${entity}/${uuid}/`, data, {headers: headers})\n          .then(response => {\n              let updateObject = response.data;\n          }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n      this.getCookieFromStorage();\n  }\n\n  render() {\n    return(\n        <div className='wrapper'>\n            <div className='content'>\n                <BrowserRouter>\n                    <Menu items={this.state.menuItem} isAuthenticated={this.isAuthenticated.bind(this)}\n                          logout={this.logout.bind(this)} username={this.state.username}/>\n                    <Switch>\n                        <Route exact path='/' render={() => <Users\n                            users={this.state.users}\n                            changePage={(entity, action) => {this.changePage(entity, action)}}\n                            currentPage={this.state.usersPage}\n                            isLastUsersPage={this.state.isLastUsersPage}\n                            isFirstUsersPage={this.state.isFirstUsersPage}/>}/>\n                        <Redirect from='/users' to='/'/>\n                        <Route exact path='/projects' render={() => <ProjectsList\n                            deleteProject={(entity, uuid) => this.deleteObject(entity, uuid)}\n                            projects={this.state.projects}\n                            changePage={(entity, action) => {this.changePage(entity, action)}}\n                            currentPage={this.state.projectPage}\n                            isLastProjectPage={this.state.isLastProjectPage}\n                            isFirstProjectPage={this.state.isFirstProjectPage}/>}/>\n                        <Route exact path='/notes' render={() => <NotesList\n                            deleteNote={(entity, uuid) => {this.deleteObject(entity, uuid)}}\n                            notes={this.state.notes}\n                            changePage={(entity, action) => {this.changePage(entity, action)}}\n                            currentPage={this.state.notesPage}\n                            isLastNotesPage={this.state.isLastNotesPage}\n                            isFirstNotesPage={this.state.isFirstNotesPage}/>}/>\n                        <Route exact path='/project/:id'>\n                            <ProjectView projects={this.state.projects}/>\n                        </Route>\n                        <Route exact path='/project/change/:uuid'>\n                            <ChangeProjectForm projects={this.state.projects}\n                                               users={this.state.users}\n                                               changeProject={(data, entity, uuid) => this.changeObject(data, entity, uuid)}/>\n                        </Route>\n                        <Route exact path='/login' render={() => <Auth getToken={(username, password) => this.getToken(username, password)}/>}/>\n                        <Route exact path='/projects/create' render={() =>\n                            <ProjectForm\n                                allUsers={this.state.users}\n                                createProject={(data, entity) => this.createObject(data, entity)}/>}/>\n                        <Route exact path='/notes/create' render={() =>\n                            <ToDoForm\n                                allProjects={this.state.projects}\n                                allUsers={this.state.users}\n                                createNote={(data, entity) => this.createObject(data,entity)} />}/>\n                        <Route render={NotFound404}/>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n            <Footer/>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}