{"version":3,"sources":["components/Projects/ProjectForm/ProjectForm.module.css","components/Notes/ToDoForm/ToDoForm.module.css","components/Users/Users.module.css","components/Notes/Notes.module.css","components/Menu/Menu.module.css","components/Footer/Footer.module.css","components/Projects/ProjectView/ProjectView.module.css","components/Users/UserItem/UserItem.jsx","components/Users/Users.jsx","components/Notes/NoteItem/NoteItem.jsx","components/Notes/Notes.jsx","components/Projects/ProjectItem/ProjectItem.jsx","components/Projects/SearchProjectForm/SearchProjectForm.jsx","components/Projects/Projects.jsx","components/Menu/MenuItem/MenuItem.jsx","components/Menu/Menu.jsx","components/Footer/Footer.jsx","components/NotFound404/NotFound404.jsx","components/Projects/ProjectView/ProjectView.jsx","components/Authorization/Auth.jsx","components/Projects/ProjectForm/ProjectForm.jsx","components/Notes/ToDoForm/ToDoForm.jsx","components/Projects/ChangeProjectForm/ChangeProjectForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","UserItem","user","username","firstname","lastname","email","Users","props","usersElements","state","users","map","id","className","c","isFirstUsersPage","onClick","changePage","isLastUsersPage","usersPage","NoteItem","note","deleteNote","project","name","slice","text","type","NotesList","NoteElements","notes","textCol","isFirstNotesPage","isLastNotesPage","currentPage","to","ProjectItem","deleteProject","usersid","forEach","u","push","currentUsers","filter","includes","userNames","join","href","repoLink","SearchProjectForm","foundProjects","projectsCount","searchStr","event","this","setState","target","value","projects","update","preventDefault","onSubmit","handleSubmit","htmlFor","onChange","handleChange","React","Component","ProjectsList","useState","setFoundProjects","ProjectElements","updateProjectElements","isFirstProjectPage","isLastProjectPage","MenuItem","item","toLowerCase","isAuthenticated","logout","Menu","ItemElements","items","menu","Footer","footer","NotFound404","location","pathname","ProjectView","useParams","currentProject","find","String","UserNames","projectData","Auth","login","password","getToken","placeholder","ProjectForm","allUsers","Number","createProject","formGroup","multiple","ToDoForm","allProjects","projectElements","userElements","createNote","ChangeProjectForm","match","params","changeProject","withRouter","App","url","menuItem","token","projectPage","notesPage","headers","Cookies","set","loadData","axios","post","then","response","setToken","data","setUsername","catch","error","alert","get","entity","action","currentPageLabel","isLastPage","isLastPageLabel","isFirstPage","isFirstPageLabel","getHeaders","objects","results","next","previous","console","log","count","delete","object","newObject","patch","updateObject","allObjects","o","getCookieFromStorage","bind","exact","path","render","from","Projects","deleteObject","Notes","changeObject","createObject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb2516e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"ProjectForm_formGroup__1yfp2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"ToDoForm_formGroup__MjCLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2Iv27\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textCol\":\"Notes_textCol__28aIv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__1wQ3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectData\":\"ProjectView_projectData__1w3fb\"};","const UserItem = ({user}) => {\n    return(\n        <tr>\n            <td>\n                {user.username}\n            </td>\n            <td>\n                {user.firstname} {user.lastname}\n            </td>\n            <td>\n                {user.email}\n            </td>\n        </tr>\n    )\n}\n\nexport default UserItem;","import UserItem from \"./UserItem/UserItem\";\nimport c from './Users.module.css';\n\nconst Users = (props) => {\n    let usersElements = props.state.users.map(user => <UserItem user={user} key={user.id}/>)\n\n\n    return(\n        <div>\n            <table className={c.users}>\n                <thead>\n                    <tr>\n                        <th>\n                            Login\n                        </th>\n                        <th>\n                            Full name\n                        </th>\n                        <th>\n                            Email\n                        </th>\n                    </tr>\n                    {usersElements}\n                </thead>\n            </table>\n            {props.state.isFirstUsersPage ? null : <button onClick={() => props.changePage('users', 'previous')}>Previous page</button>}\n            {props.state.isLastUsersPage ? null : <button onClick={() => props.changePage('users', 'next')}>Next page</button>}\n            <div>Текущая страница: {props.state.usersPage}</div>\n        </div>\n    )\n}\n\nexport default Users;","const NoteItem = ({note, deleteNote}) => {\n    return (\n        <tr>\n            <td>{note.project.name.slice(0, 60)}</td>\n            <td>{note.text.slice(0, 100)}</td>\n            <td>{note.user.firstname} {note.user.lastname}</td>\n            <td><button onClick={() => deleteNote('notes', note.id)} type='button'>Delete</button></td>\n        </tr>\n    )\n}\n\nexport default NoteItem;","import NoteItem from \"./NoteItem/NoteItem\";\nimport c from './Notes.module.css';\nimport {Link} from \"react-router-dom\";\n\nconst NotesList = (props) => {\n    let NoteElements = props.notes.map(note => <NoteItem note={note} deleteNote={props.deleteNote} key={note.id}/>)\n\n    return (\n        <div>\n            <table>\n                <tbody>\n                    <tr>\n                        <th>Project name</th>\n                        <th className={c.textCol}>Text</th>\n                        <th>Author</th>\n                        <th/>\n                    </tr>\n                    {NoteElements}\n                </tbody>\n            </table>\n            {props.isFirstNotesPage ? null : <button onClick={() => props.changePage('notes', 'previous')}>Previous page</button>}\n            {props.isLastNotesPage ? null : <button onClick={() => props.changePage('notes', 'next')}>Next page</button>}\n            <div>Текущая страница: {props.currentPage}</div>\n            <Link to='/notes/create'>Create</Link>\n        </div>\n    )\n}\n\nexport default NotesList;","import {NavLink} from \"react-router-dom\";\n\nconst ProjectItem = ({project, deleteProject, users}) => {\n    let usersid = [];\n    project.users.forEach(u => usersid.push(u));\n    let currentUsers = users.filter(u => usersid.includes(u.id));\n    let userNames = [];\n    currentUsers.forEach(u => userNames.push(`${u.firstname} ${u.lastname}`));\n    userNames = userNames.join('---');\n    return (\n        <tr>\n            <td><NavLink to={`project/${project.id}`}>{project.name.slice(0, 60)}</NavLink></td>\n            <td><a href={project.repoLink}>{project.repoLink}</a></td>\n            <td>{userNames}</td>\n            <td><button onClick={() => deleteProject('projects', project.id)} type='button'>Delete</button></td>\n            <td><NavLink to={`/project/change/${project.id}`}>Change</NavLink></td>\n        </tr>\n    )\n}\n\nexport default ProjectItem;","import React from 'react'\n\nclass SearchProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            foundProjects: this.props.projectsCount,\n            searchStr: '',\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        let foundProjects;\n        if (this.state.searchStr) {\n            foundProjects = this.props.projects.filter(project => project.name.includes(this.state.searchStr));\n        } else {\n            foundProjects = this.props.projects;\n        }\n        this.setState({\n            foundProjects: foundProjects\n        })\n        this.props.update(foundProjects);\n\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <form onSubmit={event => this.handleSubmit(event)}>\n                <label htmlFor='searchField'>Search by name...</label>\n                <input id='searchField' name='searchStr' value={this.state.searchStr} onChange={event => this.handleChange(event)}/>\n                <button type='submit'>Search</button>\n                <span>Найдено {this.state.foundProjects} записей</span>\n            </form>\n        )\n    }\n}\n\nexport default SearchProjectForm;","import ProjectItem from \"./ProjectItem/ProjectItem\";\nimport {Link} from \"react-router-dom\";\nimport React, {useState} from 'react';\nimport SearchProjectForm from \"./SearchProjectForm/SearchProjectForm\";\n\n\nconst ProjectsList = (props) => {\n    const [foundProjects, setFoundProjects] = useState(props.projects);\n\n    let ProjectElements = props.projects.map(project => <ProjectItem deleteProject={props.deleteProject}\n                                                          project={project} users={props.users} key={project.id}/>)\n\n\n\n    const updateProjectElements = projects => {\n        setFoundProjects(projects);\n    }\n\n\n    return (\n        <div>\n            <SearchProjectForm projects={props.projects} update={updateProjectElements} projectsCount={props.projectsCount}/>\n            <table>\n                <tbody>\n                    <tr>\n                        <th>Name</th>\n                        <th>Repository</th>\n                        <th>Participants</th>\n                        <th/>\n                    </tr>\n                    {ProjectElements}\n                </tbody>\n            </table>\n            {props.isFirstProjectPage ? null : <button onClick={() => {props.changePage('projects', 'previous'); updateProjectElements(props.projects)}}>Previous page</button>}\n\n            {props.isLastProjectPage ? null : <button onClick={() => {props.changePage('projects', 'next'); updateProjectElements(props.projects)}}>Next page</button>}\n\n            <div>Текущая страница: {props.currentPage}</div>\n            <Link to='/projects/create'>Create</Link>\n        </div>\n    )\n}\n\nexport default ProjectsList;","import {NavLink} from \"react-router-dom\";\n\nconst MenuItem = (props) => {\n    return (\n        <li>\n            {props.item !== 'Login' ? <NavLink to={`/${props.item.toLowerCase()}`}>{props.item}</NavLink> :\n                (props.isAuthenticated() ? <button onClick={() => props.logout()}>Выйти</button> :\n                    <NavLink to={`/${props.item.toLowerCase()}`}>Войти</NavLink>)}\n        </li>\n    )\n}\n\nexport default MenuItem;","import c from './Menu.module.css';\nimport MenuItem from \"./MenuItem/MenuItem\";\n\nconst Menu = (props) => {\n    let ItemElements = props.items.map(item => <MenuItem item={item} isAuthenticated={props.isAuthenticated} logout={props.logout} key={item}/>)\n    return(\n        <nav className={c.menu}>\n            <ul>\n                {ItemElements}\n            </ul>\n             <ul>{(props.isAuthenticated() ? 'Hello' : '')} {props.username}</ul>\n        </nav>\n    )\n}\n\nexport default Menu;","import c from './Footer.module.css';\n\nconst Footer = props => {\n    return(\n        <div className={c.footer}>\n            Todo service. &copy; All rights reserved.\n        </div>\n    )\n}\n\nexport default Footer;","const NotFound404 = ({location}) => {\n    return (\n        <div>\n            <h1>Страница по адресу '{location.pathname}' не найдена!!!</h1>\n        </div>\n    )\n}\n\nexport default NotFound404;","import c from './ProjectView.module.css';\nimport {useParams} from 'react-router-dom';\n\nconst ProjectView = ({projects, users}) => {\n    let { id } = useParams();\n    let currentProject = projects.find(project => String(project.id) == String(id));\n    let usersid = [];\n    currentProject.users.forEach(u => usersid.push(u));\n    let currentUsers = users.filter(u => usersid.includes(u.id));\n    let UserNames = currentUsers.map(item => `${item.firstname} ${item.lastname}`).join('---')\n\n    return (\n        <div className={c.projectData}>\n            <div><span>Name:</span> {currentProject.name}</div>\n            <div><span>Link on repository:</span> {currentProject.repoLink}</div>\n            <div><span>Participants:</span> {UserNames}</div>\n        </div>\n    )\n}\n\nexport default ProjectView;","import React from 'react';\n\nclass Auth extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            login: '',\n            password: ''\n        }\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            },\n        )\n    }\n\n    handleSubmit(event) {\n        this.props.getToken(this.state.login, this.state.password);\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <form onSubmit={event => this.handleSubmit(event)}>\n                <input type='text' name='login' value={this.state.login} placeholder='login' onChange={event => this.handleChange(event)}/>\n                <input type='password' name='password' value={this.state.password} placeholder='password' onChange={event => this.handleChange(event)}/>\n                <button type='submit'>Login</button>\n            </form>\n        )\n    }\n}\n\nexport default Auth;","import React from 'react';\nimport c from './ProjectForm.module.css';\n\nclass ProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            repoLink: '',\n            users: [],\n        }\n        this.usersElements = this.props.allUsers.map(user => <option value={user.id} key={user.id}>{user.firstname} {user.lastname}</option>)\n    }\n\n    handleChange(event) {\n        if (['name', 'repoLink'].includes(event.target.name)) {\n            this.setState({[event.target.name]: event.target.value})\n        }\n        else {\n            let users = [...this.state.users];\n            if (this.state.users.includes(Number(event.target.value))) {\n                users = users.filter(u => u !== Number(event.target.value));\n            }else {\n                users = [...users, Number(event.target.value)];\n            };\n            this.setState({\n                    [event.target.name]: users\n            })\n        }\n    }\n\n    handleSubmit(event) {\n        this.props.createProject({name: this.state.name, repoLink: this.state.repoLink, users: this.state.users}, 'projects')\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <form onSubmit={event => this.handleSubmit(event)}>\n                <div className={c.formGroup}>\n                    <label htmlFor='name'>Name</label>\n                    <input type='text' id='name' name='name' value={this.state.name} onChange={event => this.handleChange(event)}/>\n                </div>\n\n                <div className={c.formGroup}>\n                    <label htmlFor='repoLink'>Link of repository</label>\n                    <input type='text' id='repoLink' name='repoLink' value={this.state.repoLink} onChange={event => this.handleChange(event)}/>\n                </div>\n\n                <div className={c.formGroup}>\n                    <label htmlFor='users'>Users</label>\n                    <select multiple={true} value={this.state.users} id='users' name='users' onChange={event => this.handleChange(event)}>\n                        {this.usersElements}\n                    </select>\n                </div>\n\n                <button type='submit'>Save</button>\n            </form>\n        )\n    }\n}\n\nexport default ProjectForm;","import React from 'react';\nimport c from './ToDoForm.module.css';\n\nclass ToDoForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            project: props.allProjects[0].id,\n            text: '',\n            user: props.allUsers[0].id,\n        }\n        this.projectElements = props.allProjects.map(project => <option value={project.id} key={project.id}>{project.name}</option>)\n        this.userElements = props.allUsers.map(user => <option value={user.id} key={user.id}>{user.firstname} {user.lastname}</option>)\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        this.props.createNote(\n            {\n                project: this.state.project,\n                text: this.state.text,\n                user: this.state.user,\n            }, 'notes')\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n                <form onSubmit={event => this.handleSubmit(event)}>\n                    <div className={c.formGroup}>\n                        <label htmlFor='project'>Project</label>\n                        <select id='project' name='project' onChange={event => this.handleChange(event)}>\n                            {this.projectElements}\n                        </select>\n                    </div>\n\n                    <div className={c.formGroup}>\n                        <label htmlFor='noteText'>Text</label>\n                        <input id='noteText' type='text' name='text' value={this.state.text} onChange={event => this.handleChange(event)}/>\n                    </div>\n\n                    <div className={c.formGroup}>\n                        <label htmlFor='user'>User</label>\n                        <select id='user' name='user' onChange={event => this.handleChange(event)}>\n                            {this.userElements}\n                        </select>\n                    </div>\n\n                    <button type='submit'>Save</button>\n                </form>\n        )\n    }\n}\n\nexport default ToDoForm;","import React from 'react';\nimport c from \"../ProjectForm/ProjectForm.module.css\";\nimport {withRouter} from \"react-router-dom\";\n\n\nclass ChangeProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.id = this.props.match.params.id;\n        this.project = props.projects.find(project => String(project.id) === String(this.id));\n        this.state = {\n            name: this.project.name,\n            repoLink: this.project.repoLink,\n            users: this.project.users,\n        }\n        this.usersElements = this.props.users.map(user => <option value={user.id} key={user.id}>{user.firstname} {user.lastname}</option>)\n\n    }\n\n    handleChange(event) {\n        if (['name', 'repoLink'].includes(event.target.name)) {\n            this.setState({\n                [event.target.name]: event.target.value\n            })\n        }\n        else {\n            let users = [...this.state.users];\n            if (this.state.users.includes(Number(event.target.value))) {\n                users = users.filter(u => u !== Number(event.target.value));\n            }else {\n                users = [...users, Number(event.target.value)];\n            };\n            this.setState({\n                    [event.target.name]: users\n            })\n        }\n    }\n\n    handleSubmit(event) {\n        this.props.changeProject({name: this.state.name, repoLink: this.state.repoLink, users: this.state.users}, 'projects', this.id)\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <form onSubmit={event => this.handleSubmit(event)}>\n                <div className={c.formGroup}>\n                    <label htmlFor='name'>Name</label>\n                    <input type='text' id='name' name='name' value={this.state.name} onChange={event => this.handleChange(event)}/>\n                </div>\n\n                <div className={c.formGroup}>\n                    <label htmlFor='repoLink'>Link of repository</label>\n                    <input type='text' id='repoLink' name='repoLink' value={this.state.repoLink} onChange={event => this.handleChange(event)}/>\n                </div>\n\n                <div className={c.formGroup}>\n                    <label htmlFor='users'>Users</label>\n                    <select multiple={true} value={this.state.users} id='users' name='users' onChange={event => this.handleChange(event)}>\n                        {this.usersElements}\n                    </select>\n                </div>\n\n                <button type='submit'>Save</button>\n            </form>\n        )\n    }\n}\n\nexport default withRouter(ChangeProjectForm);","import React from \"react\";\nimport axios from \"axios\";\nimport Users from \"./components/Users/Users\";\nimport NotesList from \"./components/Notes/Notes\";\nimport ProjectsList from \"./components/Projects/Projects\";\nimport Menu from \"./components/Menu/Menu\";\nimport Footer from \"./components/Footer/Footer\";\nimport {BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport NotFound404 from \"./components/NotFound404/NotFound404\";\nimport ProjectView from \"./components/Projects/ProjectView/ProjectView\";\nimport Auth from \"./components/Authorization/Auth\";\nimport Cookies from \"universal-cookie/lib\";\nimport ProjectForm from \"./components/Projects/ProjectForm/ProjectForm\";\nimport ToDoForm from \"./components/Notes/ToDoForm/ToDoForm\";\nimport ChangeProjectForm from \"./components/Projects/ChangeProjectForm/ChangeProjectForm\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.url = 'http://185.20.227.181:8000/';\n    this.state = {\n        users: [],\n        projects: [],\n        projectsCount: '',\n        menuItem: ['Users', 'Projects', 'Notes', 'Login'],\n        notes: [],\n        token: '',\n        username: '',\n\n        usersPage: 1,\n        isLastUsersPage: false,\n        isFirstUsersPage: false,\n\n        projectPage: 1,\n        isLastProjectPage: false,\n        isFirstProjectPage: false,\n\n        notesPage: 1,\n        isLastNotesPage: false,\n        isFirstNotesPage: false,\n\n    }\n  }\n\n  setUsername(username) {\n      if (this.isAuthenticated()) {\n          this.setState({'username': username});\n      }\n  }\n\n  getHeaders() {\n      let headers = {\n          'Content-Type': 'application/json',\n          // 'Access-Control-Allow-Origin': 'http://localhost:3000'\n          // 'Access-Control-Allow-Origin': 'http://127.0.0.1:8000'\n      }\n      if (this.isAuthenticated()) {\n          headers['Authorization'] = `Token ${this.state.token}`;\n      }\n      return headers;\n  }\n\n  setToken(token) {\n      const cookies = new Cookies();\n      cookies.set('token', token);\n      this.setState({'token': token}, () => this.loadData());\n  }\n\n  getToken(login, password) {\n      axios.post(`${this.url}api-token-auth/`, {username: login, password: password})\n          .then(response => {\n              this.setToken(response.data['token']);\n              this.setUsername(login);\n          }).catch(error => alert('Wrong login or password!!!'))\n  }\n\n  getCookieFromStorage() {\n      const cookies = new Cookies();\n      const token = cookies.get('token');\n      this.setState({'token': token}, () => this.loadData());\n  }\n\n  changePage(entity, action) {\n      const headers = this.getHeaders();\n      let currentPage;\n      let currentPageLabel;\n\n      let isLastPage;\n      let isLastPageLabel;\n\n      let isFirstPage;\n      let isFirstPageLabel;\n\n      switch (entity) {\n          case 'projects':\n              currentPage = this.state.projectPage;\n              currentPageLabel = 'projectPage';\n\n              isLastPage = this.state.isLastProjectPage;\n              isLastPageLabel = 'isLastProjectPage';\n\n              isFirstPage = this.state.isFirstProjectPage;\n              isFirstPageLabel = 'isFirstProjectPage';\n              break;\n          case 'users':\n              currentPage = this.state.usersPage;\n              currentPageLabel = 'usersPage';\n\n              isLastPage = this.state.isLastUsersPage;\n              isLastPageLabel = 'isLastUsersPage';\n\n              isFirstPage = this.state.isFirstUsersPage;\n              isFirstPageLabel = 'isFirstUsersPage';\n              break;\n          case 'notes':\n              currentPage = this.state.notesPage;\n              currentPageLabel = 'notesPage';\n\n              isLastPage = this.state.isLastNotesPage;\n              isLastPageLabel = 'isLastNotesPage';\n\n              isFirstPage = this.state.isFirstNotesPage;\n              isFirstPageLabel = 'isFirstNotesPage';\n              break;\n          default:\n              break;\n      }\n\n      if (action === 'next' && !isLastPage) {\n          ++currentPage;\n      } else if (action === 'previous' && !isFirstPage) {\n          --currentPage;\n      } else {\n          return\n      }\n      axios.get(`${this.url}api/${entity}/?page=${currentPage}`, {headers})\n        .then(response => {\n          const objects = response.data.results;\n          this.setState(\n              {\n                [entity]: objects,\n                [currentPageLabel]: currentPage,\n                [isLastPageLabel]: !response.data.next,\n                [isFirstPageLabel]: !response.data.previous,\n              }\n          )\n        }).catch(error => {\n            this.setState(\n              {\n                [currentPageLabel]: 1,\n              }\n          )\n      })\n  }\n\n  loadData() {\n      const headers = this.getHeaders();\n      axios.get(`${this.url}api/0.2/users/?page=1`, {headers})\n        .then(response => {\n          const users = response.data.results\n          this.setState(\n              {\n                users: users,\n              }\n          )\n        }).catch(error => console.log(error))\n    axios.get(`${this.url}api/projects/`, {headers})\n        .then(response => {\n          const projects = response.data.results\n          this.setState(\n              {\n                projects: projects,\n                projectsCount: response.data.count\n              }\n          )\n        }).catch(error => console.log(error))\n    axios.get(`${this.url}api/notes/`, {headers})\n        .then(response => {\n          const notes = response.data.results\n          this.setState(\n              {\n                notes: notes,\n              }\n          )\n        }).catch(error => console.log(error))\n  }\n\n  logout() {\n      this.setToken('');\n      this.setState({'username': ''});\n      this.setState({\n        notes: []\n      })\n  }\n\n  isAuthenticated() {\n      return this.state.token != '';\n  }\n\n  deleteObject(entity, id) {\n      const headers = this.getHeaders();\n      axios.delete(`${this.url}api/${entity}/${id}/`, {headers: headers})\n          .then(response => {\n              const objects = this.state[entity].filter(object => object.id != id);\n              this.setState({[entity]: objects})\n          }).catch(error => console.log(error))\n  }\n\n  createObject(data, entity) {\n      const headers = this.getHeaders();\n      axios.post(`${this.url}api/${entity}/`, data, {headers: headers})\n          .then(response => {\n              let newObject = response.data;\n              switch (entity) {\n                  case 'projects':\n                      break;\n                  case 'notes':\n                      let project = this.state.projects.find(project => String(project.id) === String(newObject.project));\n                      newObject.project = project;\n                      let user = this.state.users.find(user => String(user.id) === String(newObject.user));\n                      newObject.user = user;\n                      break;\n                  default:\n                      break;\n              }\n              this.setState({\n                  [entity]: [...this.state[entity], newObject]\n              })\n          }).catch(error => console.log(error));\n  }\n\n  changeObject(data, entity, id) {\n      const headers = this.getHeaders();\n      axios.patch(`${this.url}api/${entity}/${id}/`, data, {headers: headers})\n          .then(response => {\n              let updateObject = response.data;\n              let allObjects = this.state[entity].filter(o => o.id != id);\n              allObjects.push(updateObject);\n              this.setState({\n                  [entity]: allObjects\n              })\n          }).catch(error => console.log(error));\n  }\n\n\n  componentDidMount() {\n      this.getCookieFromStorage();\n  }\n\n  render() {\n    return(\n        <div className='wrapper'>\n            <div className='content'>\n                <BrowserRouter>\n                    <Menu items={this.state.menuItem} isAuthenticated={this.isAuthenticated.bind(this)}\n                          logout={this.logout.bind(this)} username={this.state.username}/>\n                    <Switch>\n                        <Route exact path='/' render={() => <Users\n                            state={this.state}\n                            changePage={(entity, action) => {this.changePage(entity, action)}}/>}/>\n                        <Redirect from='/users' to='/'/>\n                        <Route exact path='/projects' render={() => <ProjectsList\n                            deleteProject={(entity, id) => this.deleteObject(entity, id)}\n                            users={this.state.users}\n                            projects={this.state.projects}\n                            projectsCount={this.state.projectsCount}\n                            changePage={(entity, action) => {this.changePage(entity, action)}}\n                            currentPage={this.state.projectPage}\n                            isLastProjectPage={this.state.isLastProjectPage}\n                            isFirstProjectPage={this.state.isFirstProjectPage}/>}/>\n                        <Route exact path='/notes' render={() => <NotesList\n                            deleteNote={(entity, id) => {this.deleteObject(entity, id)}}\n                            notes={this.state.notes}\n                            changePage={(entity, action) => {this.changePage(entity, action)}}\n                            currentPage={this.state.notesPage}\n                            isLastNotesPage={this.state.isLastNotesPage}\n                            isFirstNotesPage={this.state.isFirstNotesPage}/>}/>\n                        <Route exact path='/project/:id'>\n                            <ProjectView projects={this.state.projects} users={this.state.users}/>\n                        </Route>\n                        <Route exact path='/project/change/:id'>\n                            <ChangeProjectForm projects={this.state.projects}\n                                               users={this.state.users}\n                                               changeProject={(data, entity, id) => this.changeObject(data, entity, id)}/>\n                        </Route>\n                        <Route exact path='/login' render={() => <Auth getToken={(username, password) => this.getToken(username, password)}/>}/>\n                        <Route exact path='/projects/create' render={() =>\n                            <ProjectForm\n                                allUsers={this.state.users}\n                                createProject={(data, entity) => this.createObject(data, entity)}/>}/>\n                        <Route exact path='/notes/create' render={() =>\n                            <ToDoForm\n                                allUsers={this.state.users}\n                                createNote={(data, entity) => this.createObject(data,entity)}\n                                allProjects={this.state.projects}/>}/>\n\n                        <Route render={NotFound404}/>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n            <Footer/>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}